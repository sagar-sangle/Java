Collection Framework

Collections Class :

Interfaces
Collection
List
Set
Queue
Deque
Map

Classes
ArrayList
LinkedList
HashSet
TreeSet
LinkedHashSet
PriorityQueue
ArrayDeque
HashMap
TreeMap
LinkedHashMap
Hashtable

Legacy Classes
Vector
Stack
Hashtable

Utility Classes
Collections
Arrays

Features and Concepts
Generics
Iterator
ListIterator
Enumeration
Comparable
Comparator
Streams
Concurrent Collections
Concurrent and Synchronized Collections
ConcurrentHashMap
CopyOnWriteArrayList
CopyOnWriteArraySet


how to explain imlementing class in Collection

1)implementation of ..
2)present in .. package 
3)It uses internalyy ... data structure
4)if it extends or implements any other interface 
5)it /follows/does not follow any indexing based structure
6)does it follows any order ? 
7)does it uses index based ds?
8)can it contain null values 
9)is it Synchronized ? or thread safe ? 
10)it store homo/hetero type of data ?


how to explain interface 

Purpose
1)Briefly explain the primary purpose of the interface and what it is designed to achieve.

Package
2)Specify the package where the interface is defined.

3)Key Methods
Highlight the most important methods defined in the interface, focusing on their functionality.

Subinterfaces
3)List any subinterfaces that extend this interface, if applicable.

Implementing Classes
4)Mention the main classes that implement the interface.

Key Features/Characteristics
5)Highlight important traits or characteristics that make the interface unique.

Allows duplicate elements.
Supports null elements in most implementations.
Provides methods for positional access, iteration, and range views.
Usage Scenarios
Provide examples of when and why the interface should be used.
Example: The List interface is used when you need a collection to maintain order and provide indexed access to elements.

Special Notes
Include any noteworthy points, like default methods introduced in newer versions of Java or functional aspects.
Example: Since Java 8, List includes default methods such as forEach() and replaceAll().


